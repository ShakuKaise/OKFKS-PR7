# Generated by Django 5.1.4 on 2024-12-16 08:09

import django.contrib.auth.password_validation
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('LibHub', '0003_alter_author_first_name_alter_author_last_name_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='author',
            name='first_name',
            field=models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Имя автора может содержать только буквы и пробелы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='author',
            name='last_name',
            field=models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Фамилия автора может содержать только буквы и пробелы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='author',
            name='middle_name',
            field=models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Отчество автора может содержать только буквы и пробелы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='book',
            name='name',
            field=models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255), django.core.validators.RegexValidator(message='Название книги может содержать только буквы, цифры и пробелы.', regex='^[a-zA-Zа-яА-Я0-9\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='genre',
            name='name',
            field=models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(30), django.core.validators.RegexValidator(message='Название жанра может содержать только буквы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='language',
            name='chars_code',
            field=models.CharField(max_length=5, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(5), django.core.validators.RegexValidator(message='Код языка может содержать только заглавные буквы.', regex='^[A-Z]*$')]),
        ),
        migrations.AlterField(
            model_name='language',
            name='name',
            field=models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Название языка может содержать только буквы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='publisher',
            name='address',
            field=models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100), django.core.validators.RegexValidator(message='Адрес издательства может содержать только буквы, цифры и знаки препинания.', regex='^[a-zA-Zа-яА-Я0-9\\s,.-]*$')]),
        ),
        migrations.AlterField(
            model_name='publisher',
            name='name',
            field=models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Название издательства может содержать только буквы и пробелы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='request',
            name='status',
            field=models.CharField(choices=[('RENTED', 'Rented'), ('EXPIRED', 'Expired'), ('RETURNED', 'Returned')], max_length=8, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(8)]),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Имя может содержать только буквы и пробелы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator(message='Фамилия может содержать только буквы и пробелы.', regex='^[a-zA-Zа-яА-Я\\s]*$')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, validators=[django.contrib.auth.password_validation.validate_password, django.core.validators.MinLengthValidator(6)]),
        ),
    ]
